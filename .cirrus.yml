environment:
    CCACHE_BASEDIR: $CIRRUS_WORKING_DIR

clang9_zeek31_ubuntu_debug_task:
  trigger_type: manual
  container:
    dockerfile: ci/Dockerfile
    docker_arguments:
      - zeek_packages: zeek zeek-core-dev
    cpu: 8
    memory: 16G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /var/spool/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /var/spool/ccache
    CCACHE_COMPRESS: 1
    LD_LIBRARY_PATH: /usr/lib/llvm-9/lib/clang/9.0.0/lib/linux/

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  # We currently run the build with sanitizers against llvm-9 since llvm-10 still triggers some warnings from inside LLVM.
  #
  # TODO(bbannier): Switch this job to llvm-10.
  configure_script:   ./ci/run-ci -b build configure debug --cxx-compiler clang++-9 --with-zeek /opt/zeek --clang-format `which clang-format-10` --clang-tidy `which clang-tidy-10` --rpath /usr/lib/llvm-9/lib/clang/9.0.0/lib/linux/ --zeek-ld-preload /usr/lib/llvm-9/lib/clang/9.0.0/lib/linux/libclang_rt.asan-x86_64.so
  build_script:       ./ci/run-ci -b build build
  test_build_script:  ./ci/run-ci -b build test-build
  test_code_script:   ./ci/run-ci -b build test-code
  install_script:     ./ci/run-ci -b build install
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

  on_failure:
    ci_artifacts:
      path: artifacts
    junit_artifacts:
      path: artifacts/diag.xml
      type: text/xml
      format: junit

clang10_zeek31_ubuntu_release_task:
  trigger_type: manual
  container:
    dockerfile: ci/Dockerfile
    docker_arguments:
      - zeek_packages: zeek-lts zeek-lts-core-dev
    cpu: 8
    memory: 16G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /var/spool/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /var/spool/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:      ./ci/run-ci -b build configure release --cxx-compiler clang++-10 --with-zeek /opt/zeek --clang-format `which clang-format-10` --clang-tidy `which clang-tidy-10`
  build_script:          ./ci/run-ci -b build build
  test_build_script:     ./ci/run-ci -b build test-build
  install_script:        ./ci/run-ci -b build install
  cleanup_script:        ./ci/run-ci -b build cleanup
  test_install_script:   ./ci/run-ci -b build test-install
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

  on_failure:
    ci_artifacts:
      path: artifacts
    junit_artifacts:
      path: artifacts/diag.xml
      type: text/xml
      format: junit

clang9_zeek30_ubuntu_release_task:
  trigger_type: manual
  container:
    dockerfile: ci/Dockerfile
    docker_arguments:
      - zeek_packages: zeek-lts zeek-lts-core-dev
    cpu: 8
    memory: 16G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /var/spool/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /var/spool/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:      ./ci/run-ci -b build configure release --cxx-compiler clang++-9 --with-zeek /opt/zeek --clang-format `which clang-format-10` --clang-tidy `which clang-tidy-10`
  build_script:          ./ci/run-ci -b build build
  install_script:        ./ci/run-ci -b build install
  cleanup_script:        ./ci/run-ci -b build cleanup
  test_install_script:   ./ci/run-ci -b build test-install
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

  on_failure:
    ci_artifacts:
      path: artifacts
    junit_artifacts:
      path: artifacts/diag.xml
      type: text/xml
      format: junit

gcc9_ubuntu_release_no_jit_task:
  trigger_type: manual
  container:
    dockerfile: ci/Dockerfile
    docker_arguments:
      - zeek_packages: zeek-lts zeek-lts-core-dev
    cpu: 8
    memory: 16G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /var/spool/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /var/spool/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:      ./ci/run-ci -b build configure release --cxx-compiler g++-9 --disable-jit
  build_script:          ./ci/run-ci -b build build
  install_script:        ./ci/run-ci -b build install
  cleanup_script:        ./ci/run-ci -b build cleanup
  test_install_script:   ./ci/run-ci -b build test-install-nojit
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

  on_failure:
    ci_artifacts:
      path: artifacts
    junit_artifacts:
      path: artifacts/diag.xml
      type: text/xml
      format: junit

macos_release_task:
  trigger_type: manual
  osx_instance:
    image: catalina-base

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  environment:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  install_dependencies_script:
    - brew install llvm bison flex cmake ninja python@3.8 sphinx-doc ccache zeek
    - pip3 install btest sphinx_rtd_theme

  configure_script:
    - ./configure --generator=Ninja --with-cxx-compiler=/usr/local/opt/llvm/bin/clang++ --with-bison=/usr/local/opt/bison --with-flex=/usr/local/opt/flex --enable-ccache
  build_script:
    - ninja -C build all check
  test_build_script:
    - (cd tests && btest -j)
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

docker_ubuntu_19_10_task:
  trigger_type: manual
  container:
    dockerfile: docker/Dockerfile.ubuntu-19.10
    cpu: 8
    memory: 16G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /var/spool/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /var/spool/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --with-zeek=/opt/zeek
  build_script:
    - ninja -C build install -j5
  test_script:
    - cd tests && SPICY_INSTALLATION_DIRECTORY=/opt/spicy btest -a installation -j -d
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

docker_alpine_3_11_task:
  trigger_type: manual
  container:
    dockerfile: docker/Dockerfile.alpine-3.11
    cpu: 8
    memory: 16G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /var/spool/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /var/spool/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - LDFLAGS="-lucontext" ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --with-zeek=/opt/zeek --with-cxx-compiler=clang++
  build_script:
    - ninja -C build install -j5
  test_script:
    - cd tests && SPICY_INSTALLATION_DIRECTORY=/opt/spicy btest -a installation -j -d
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

docker_centos_8_task:
  trigger_type: manual
  container:
    dockerfile: docker/Dockerfile.centos-8
    cpu: 8
    memory: 16G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /var/spool/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /var/spool/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --with-zeek=/opt/zeek --with-cxx-compiler=clang++
  build_script:
    - ninja -C build install -j5
  test_script:
    - cd tests && SPICY_INSTALLATION_DIRECTORY=/opt/spicy btest -a installation -j -d
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy-*.tar.gz
    type: application/gzip

docker_builder:
  name: Publish images
  # Make this depend on all required tasks.
  # depends_on:
  #   - docker_alpine_3_11_task
  #   - ...

  # Trigger only for tags.
  # only_if: $CIRRUS_TAG != ''

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  env:
    DOCKER_USERNAME: ENCRYPTED[054c0f25f9f6a6ed6720c9d8d11e1a5fc6d12dbf2c99860cd6c938528b13d29e545d06462c9775a3cbd5fc9ea7ae9f53]
    DOCKER_PASSWORD: ENCRYPTED[ffe56ca425d6964e2d1361241433aa4ce4f9c55f757fb26a2aa9994c7880a7fc6c010286c091e7e115390f64ccedec5b]

  matrix:
    - build_script: make -C docker build-alpine-3.11
    - build_script: make -C docker build-centos-8
    - build_script: make -C docker build-ubuntu-19.10
  login_script:
    - docker login --username "$DOCKER_USERNAME" --password "$DOCKER_PASSWORD"
  publish_script: |
    for image in $(docker images --filter=reference='spicy*:*' --format '{{.Repository}}:{{.Tag}}'); do
      docker tag "$image" "zeekurity/$image";
      docker push "zeekurity/$image";
    done
